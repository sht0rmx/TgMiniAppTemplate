services:
  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile
    volumes:
      - frontend_data:/app/dist
    ports:
      - "5173:8080"
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/botdb
    depends_on:
      - db
    ports:
      - "8000:8000"
    volumes:
      - backend_data:/app/data
    restart: unless-stopped

  bot:
    build:
      context: ./bot
      dockerfile: dockerfile
    environment:
      - TOKEN=${TOKEN}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - DATABASE_URL=postgresql://postgres:password@db:5432/botdb
    depends_on:
      - db
    volumes:
      - bot_data:/app/data
    restart: unless-stopped

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: botdb
    ports:
      - "5432:5432"
    volumes:
      - db_pg_data:/var/lib/postgresql/data
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped

volumes:
  frontend_data:
  backend_data:
  bot_data:
  db_pg_data:
  minio_data:
    driver: local
